<%- include('../../partials/head'); %>

<body>
<div class="layout">
  <%- include('../../partials/header'); %>

  <%- include('../../partials/sidebar'); %>

  <main id="accountGroupsRegist">
    <form @submit.prevent="onSubmit" name="accountGroups">
      <h4 class="mb-4 fw-bold" style="color:#0069D9;">
        <img src="/images/icon/account.svg" style="width: 24px;">
        <template v-if="displayType === 'regist'" class="fs-4">アカウントグループ登録</template>
        <template v-else class="fs-4">アカウントグループ詳細</template>
      </h4>

      <!-- アカウントグループID -->
      <div v-if="id" class="row mb-4">
        <label class="form-label">アカウントグループID</label>
        <label class="form-label">{{ id }}</label>
      </div>

      <!-- アカウントグループ名 -->
      <div class="row mb-5">
        <label class="form-label">アカウントグループ名 <span class="redDC3545">*必須</span></label>
        <div class="col-8">
          <input
            v-model="accountGroupName"
            name="accountGroupName"
            maxlength="60"
            type="text"
            class="form-control mb-2"
          />
          <div v-if="$v.accountGroupName.$dirty" class="text-danger fw-bold">
            <span v-if="!$v.accountGroupName.required">必須項目が入力されていません。</span>
          </div>
        </div>
      </div>

      <!-- テナント一覧 -->
      <h5 class="mb-4 fw-bold">テナント一覧</h5>
      <div style="overflow: auto; width: 70%; height: 200px;" class="mb-5">
        <input v-model="useTenants" type="hidden" name="useTenants">
        <table class="table align-middle">
          <thead>
            <tr>
              <th style="z-index: 101; position: sticky; top: 0; left: 0; background: white;">テナントID</th>
              <th style="z-index: 101; position: sticky; top: 0; left: 0; background: white;">テナント名</th>
              <th style="z-index: 101; position: sticky; top: 0; left: 0; background: white;"></th>
            </tr>
          </thead>
          <tbody>
            <tr
              v-for="(item, index) in tenants"
              :key="index"
              @click="onActionList(item)"
              style="position: relative;"
            >
              <td>{{ item.id }}</td>
              <td>{{ item.tenantName }}</td>
              <td>
                <input
                  v-model="item.tenantCheck"
                  class="form-check-input"
                  type="checkbox"
                >
              </td>
            </tr>
          </tbody>
        </table>
        <div v-if="!useTenantsCheck" class="text-danger fw-bold mt-3">
          <p>テナントを選択してください。</p>
        </div>
      </div>

      <div class="text-end">
        <button v-if="displayType === 'regist'" type="submit" class="btn baseBtnBlue" style="width: 156px;">登録</button>
        <button v-if="displayType === 'detail'" type="submit" class="btn baseBtnBlue" style="width: 156px;">保存</button>
      </div>
    </form>
  </main>
</div>

<script type="text/javascript">
const tenants = `<%- tenants %>`;
const forms = `<%- forms %>`;

const VueCtkDateTimePicker = window['vue-ctk-date-time-picker'];
Vue.component('vue-ctk-date-time-picker', VueCtkDateTimePicker);

Vue.use(window.vuelidate.default);
const { required, minValue } = window.validators;

new Vue({
  el: "#accountGroupsRegist",
  data: {
    displayType: "",
    useTenantsCheck: true,  // 入力チェック（テナント一覧）
    // APIデータ
    tenants: JSON.parse(tenants),
    forms: JSON.parse(forms),
    // 登録データ
    id: "",                 // アカウントグループID
    accountGroupName: "",   // アカウントグループ名
    useTenants: [],         // テナント一覧
  },
  validations: {
    accountGroupName: {
      required,
    },
  },
  created() {
    this.setInitData();
    // テナント一覧（チェックフラグ作成）
    this.tenants.forEach(item => {
      item.tenantCheck = false;
      if(this.useTenants) {
        this.useTenants.forEach(tenant => {
          if(item.id === tenant.id) {
            item.tenantCheck = true;
          }
        });
      }
    });
  },
  methods: {
    /**
     * 登録情報セット
     */ 
     setInitData() { 
      if(this.forms.id) this.id = this.forms.id;
      this.accountGroupName = this.forms.accountGroupName;
      this.useTenants = this.forms.useTenants;
      location.href.match(/regist/) ? this.displayType = 'regist' : this.displayType = 'detail'
    },
    /**
     * バリデーションチェック（テナント一覧）
     */
    validationUseTenants() {
      this.useTenantsCheck = false;
      this.useTenants = [];
      this.tenants.forEach(tenant => {
        if(tenant.tenantCheck === true) this.useTenantsCheck = true;  
      });
      if(this.useTenantsCheck) {
        this.useTenants = this.tenants;
        document.accountGroups.useTenants.value = JSON.stringify(this.useTenants);
      }
    },
    /**
     * 登録処理
     */ 
    onSubmit() {
      this.$v.$touch();
      this.validationUseTenants();
      if(!this.$v.$invalid && this.useTenantsCheck) {
        document.accountGroups.method="post";
        document.accountGroups.action = "/accountGroups/regist";
        document.accountGroups.submit();
      }
    }
  }
})
</script>
</body>
</html>
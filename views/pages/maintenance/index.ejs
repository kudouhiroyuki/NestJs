<%- include('../../partials/head'); %>

<body>
<div class="layout">
  <%- include('../../partials/header'); %>

  <%- include('../../partials/sidebar'); %>

  <main id="maintenanceIndex">    
    <h4 class="mb-4 fw-bold" style="color:#0069D9;">
      <img src="/images/icon/maintenance.svg" style="width: 24px;">
      メンテナンス設定
    </h4>

    <form @submit.prevent="onSubmit">
      <!-- 登録フォーム -->
      <div class="baseShadow mb-5" style="padding: 2rem 3rem;">
        <!-- メンテナンス対象 -->
        <div class="mb-4">
          <label class="form-label fw-bold">メンテナンス対象</label>
          <div class="form-check mb-3">
            <input
              v-model="subject"
              name="subject"
              class="form-check-input"
              type="radio"
              id="subject_1"
              value="1"
            >
            <label class="form-check-label" for="subject_1">システムメンテナンス</label>
          </div>
          <div class="row mb-3">
            <div class="col-4">
              <input
                v-model="subject"
                name="subject"
                class="form-check-input"
                type="radio"
                id="subject_2"
                value="2"
              >
              <label class="form-check-label" for="subject_2">テナントメンテナンス</label>
            </div>
            <div class="col-3">
              <select v-model="tenantName" :disabled="subject!=='2'" class="form-select">
                <option hidden value="">選択してください</option>
                <option
                  v-for="item in tenants"
                  :key="item.tenantId"
                  :value="item"
                >{{ item.tenantName }}</option>
              </select>
            </div>
          </div>
          <div class="row mb-3">
            <div class="col-4">
              <input
                v-model="subject"
                name="subject"
                class="form-check-input"
                type="radio"
                id="subject_3"
                value="3"
              >
              <label class="form-check-label" for="subject_3">機能メンテナンス</label>
            </div>
            <div class="col-3">
              <select v-model="vigorName" :disabled="subject!=='3'" class="form-select">
                <option hidden value="">選択してください</option>
                <option
                  v-for="item in vigors"
                  :key="item.id"
                  :value="item"
                >{{ item.name }}</option>
              </select>
            </div>
          </div>
        </div>

        <!-- 開始・終了日時 -->
        <div class="row mb-4">
          <div class="col-8">
            <div class="d-inline-block">
              <label class="form-label fw-bold">開始日時</label>
              <vue-ctk-date-time-picker
                v-model="startDate"
                :format="'YYYY/MM/DD hh:mm a'"
                :formatted="'YYYY-MM-DD HH:mm a'"
                :label="'From'"
                position="top"
                name="startDate"
              /></vue-ctk-date-time-picker>
            </div>
            <div class="d-inline-block">〜</div>
            <div class="d-inline-block">
              <label class="form-label fw-bold">終了日時</label>
              <vue-ctk-date-time-picker
                v-model="endDate"
                :format="'YYYY/MM/DD hh:mm a'"
                :formatted="'YYYY-MM-DD HH:mm a'"
                :label="'From'"
                position="top"
                name="endDate"
              /></vue-ctk-date-time-picker>
            </div>
            <div v-if="$v.checkStartDate.$dirty" class="text-danger fw-bold mt-2">
              <p v-if="!$v.checkStartDate.required">開始日時が入力されていません。</p>
              <p v-if="!$v.checkStartDate.minValue">開始日時は現在日時以降で入力して下さい。</p>
              <p v-if="!$v.checkStartDate.maxValueValue">開始日時は終了日時以前で入力して下さい。</p>
            </div>
            <div v-if="$v.checkEndDate.$dirty" class="text-danger fw-bold mt-2">
              <p v-if="!$v.checkEndDate.required">終了日時が入力されていません。</p>
              <p v-if="!$v.checkEndDate.minValue">終了日時は現在日時以降で入力して下さい。</p>
              <p v-if="!$v.checkEndDate.minValueValue">終了日時は開始日時以降で入力して下さい。</p>
            </div>
          </div>
          <div class="col-4">
            <input type="submit" value="登録" class="btn baseBtnBlue" style="width: 156px;">
          </div>
        </div>

        {{ '終了日' + endDate }}

      </div>
      <!-- 一覧テーブル -->
      <h5 class="mb-4 fw-bold">メンテナンス一覧</h5>
      <table class="table align-middle">
        <thead>
          <tr>
            <th scope="col">メンテナンス対象</th>
            <th scope="col">テナント名</th>
            <th scope="col">機能名</th>
            <th scope="col">開始日時</th>
            <th scope="col">終了日時</th>
          </tr>
        </thead>
        <tbody>
          <tr v-for="(item, index) in maintenances" :key="index">
            <td>{{ item.id }}</td>
            <td>
              <template v-if="item.tenantName">{{ item.tenantName }}</template>
              <template v-else>-</template>
            </td>
            <td>
              <template v-if="item.vigorName">{{ item.vigorName }}</template>
              <template v-else>-</template>
            </td>
            <td>{{ item.startDate }}</td>
            <td>{{ item.endDate }}</td>
          </tr>
        </tbody>
      </table>
    </form>
  </main>
</div>


<script type="text/javascript">
const tenants= `<%- tenants %>`;
const vigors= `<%- vigors %>`;
const maintenances= `<%- maintenances %>`;

const VueCtkDateTimePicker = window['vue-ctk-date-time-picker'];
Vue.component('vue-ctk-date-time-picker', VueCtkDateTimePicker);

Vue.use(window.vuelidate.default);
const { required, minValue, maxValueValue, minValueValue } = window.validators;

new Vue({
  el: "#maintenanceIndex",
  data: {
    checkStartDate: '',         // 開始日時 (入力チェック用)
    checkEndDate: '',           // 終了日時 (入力チェック用)
    // APIデータ
    tenants: JSON.parse(tenants),
    vigors: JSON.parse(vigors),
    maintenances: JSON.parse(maintenances),
    // 登録データ
    subject: '1',                // メンテナンス対象
    tenantName: '',              // テナント名
    vigorName: '',               // 機能名
    startDate: null,             // 開始日時 (From)
    endDate: null,               // 終了日時 (To)
  },
  validations: {
    checkStartDate: {
      required,
      minValue: value => value > new Date().getTime(),
      maxValueValue: value => value < window.checkEndDate,
    },
    checkEndDate: {
      required,
      minValue: value => value > new Date().getTime(),
      minValueValue: value => value > window.checkStartDate,
    },
  },
  watch: {
    /**
     * 開始日時の変更監視（バリデーションチェック用）
     */
    startDate: function(newVal, oldVal) {
      this.startDate = null;
      this.checkStartDate = '';
      this.checkEndDate = '';
      window.checkStartDate = '';
      window.checkEndDate = '';
      if(newVal !== null) {
        let resultDate = moment(new Date(newVal.slice(0, -3)));
        if (newVal.match(/午後/)) resultDate.add(12, 'h').format();
        this.startDate = moment(resultDate._d).format("YYYY-MM-DD HH:mm:ss");
        this.checkStartDate = new Date(resultDate).getTime();
        window.checkStartDate = new Date(resultDate).getTime();
      }
      this.checkEndDate = new Date(this.endDate).getTime();
      window.checkEndDate = new Date(this.endDate).getTime();
    },
    /**
     * 終了日時の変更監視（バリデーションチェック用）
     */ 
    endDate: function(newVal, oldVal) {
      this.endDate = null;
      this.checkEndDate = '';
      this.checkStartDate = '';
      window.checkEndDate = '';
      window.checkStartDate = '';
      if(newVal !== null) {
        let resultDate = moment(new Date(newVal.slice(0, -3)));
        if (newVal.match(/午後/)) resultDate.add(12, 'h').format();
        this.endDate = moment(resultDate._d).format("YYYY-MM-DD HH:mm:ss");
        this.checkEndDate = new Date(resultDate).getTime();
        window.checkEndDate = new Date(resultDate).getTime();
      }
      this.checkStartDate = new Date(this.startDate).getTime();
      window.checkStartDate = new Date(this.startDate).getTime();
    }
  },
  methods: {
    /**
     * 基準日の作成
     */ 
     createBaseDate(date) {
      let year = moment(date).format("YYYY");
      let month = moment(date).format("M");
      let day = moment(date).format("D");
      let retultDate = new Date(year, (month - 1), day);
      return retultDate;
    },
    onSubmit() {  
      this.$v.$touch();
      if(!this.$v.$invalid) {
        alert(777)
        // document.notice.method="post";
        // document.notice.action = "/notification/regist";
        // document.notice.submit();
      }
    }
  }
})
</script>
</body>
</html>
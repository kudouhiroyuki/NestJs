<%- include('../../partials/head'); %>

<body>
<div class="layout">
  <%- include('../../partials/header'); %>

  <%- include('../../partials/sidebar'); %>

  <main id="productsRegist">    
    <h4 class="mb-4 fw-bold">商品登録</h4>

    <form @submit.prevent="onRegist" name="productsForm">

      <!-- 基本情報 -->
      <div :style="basicTabStatus ? 'height: inherit' : 'height: 55px'" class="baseShadow p-3 mb-5 overflow-hidden">
        <div class="d-flex">
          <div class="me-auto">
            <h5 class="mb-4 fw-bold">基本情報</h5>
          </div>
          <div style="cursor: pointer">
            <img
              @click="onTabToggle('basicTabStatus')"
              :style="basicTabStatus ? 'transform: inherit' : 'transform: scale(1, -1)'"
              src="/images/icon/arow.svg"
            >
          </div>
        </div>
        <!-- 商品コード -->
        <div v-if="displayType === 'detail'" class="col-4 mb-4">
          <label class="form-label">商品コード</label>
          <p style="font-size: 18px">{{ productCode }}</p>
        </div>
        <!-- 商品名 -->
        <div class="col-4 mb-4">
          <label class="form-label">商品名</label>
          <input
            v-model="productName"
            name="productName"
            type="text"
            class="form-control"
            placeholder="商品名"
            maxlength="50"
          >
          <div v-if="$v.productName.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.productName.required">商品名が入力されていません。</p>
          </div>
        </div>
        <!-- 商品説明 -->
        <div class="col-6 mb-4">
          <label class="form-label">商品説明</label>
          <textarea
            v-model="explain"
            name="explain"
            rows="3"
            class="form-control mb-2"
            maxlength="400"
          ></textarea>
          <div v-if="$v.explain.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.explain.required">商品説明が入力されていません。</p>
          </div>
        </div>
        <!-- 注意事項 -->
        <div class="col-6 mb-4">
          <label class="form-label">注意事項</label>
          <textarea
            v-model="notes"
            name="notes"
            rows="3"
            class="form-control mb-2"
            maxlength="400"
          ></textarea>
        </div>
        <!-- 表示期間 -->
        <div class="col-12 mb-4">
          <label class="form-label w-100">表示期間</label>
          <div class="d-inline-block">
            <vue-ctk-date-time-picker
              v-model="displayFromDatetime"
              :format="'YYYY/MM/DD hh:mm a'"
              :formatted="'YYYY-MM-DD HH:mm'"
              :label="'From'"
              position="top"
              name="displayFromDatetime"
            /></vue-ctk-date-time-picker>
          </div>
          <div class="d-inline-block">〜</div>
          <div class="d-inline-block">
            <vue-ctk-date-time-picker
              v-model="displayToDatetime"
              :format="'YYYY/MM/DD hh:mm a'"
              :formatted="'YYYY-MM-DD HH:mm'"
              :label="'To'"
              position="top"
              name="displayToDatetime"
            /></vue-ctk-date-time-picker>
          </div>
          <div class="d-inline-block">
            <input v-model="JSON.stringify(isDisplayedStatus)" type="hidden" name="isDisplayedStatus">
            <input
              v-model="isDisplayedStatus"
              @click="isDisplayedStatus=$event.target.checked"
              class="form-check-input"
              type="checkbox"
              id="isDisplayedStatus"
            >
            <label class="form-check-label" for="isDisplayedStatus">
              表示停止
            </label>
          </div>
          <div v-if="$v.displayFromDatetime.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.displayFromDatetime.required">Fromが入力されていません。</p>
          </div>
          <div v-if="$v.displayToDatetime.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.displayToDatetime.required">Toが入力されていません。</p>
          </div>
        </div>
        <!-- 販売期間 -->
        <div class="col-12 mb-4">
          <label class="form-label w-100">販売期間</label>
          <div class="d-inline-block">
            <vue-ctk-date-time-picker
              v-model="saleFromDatetime"
              :format="'YYYY/MM/DD hh:mm a'"
              :formatted="'YYYY-MM-DD HH:mm'"
              :label="'From'"
              position="top"
              name="saleFromDatetime"
            /></vue-ctk-date-time-picker>
          </div>
          <div class="d-inline-block">〜</div>
          <div class="d-inline-block">
            <vue-ctk-date-time-picker
              v-model="saleToDatetime"
              :format="'YYYY/MM/DD hh:mm a'"
              :formatted="'YYYY-MM-DD HH:mm'"
              :label="'To'"
              position="top"
              name="saleToDatetime"
            /></vue-ctk-date-time-picker>
          </div>
          <div class="d-inline-block">
            <input v-model="JSON.stringify(isSoldStatus)" type="hidden" name="isSoldStatus">
            <input
              v-model="isSoldStatus"
              @click="isSoldStatus=$event.target.checked"
              class="form-check-input"
              type="checkbox"
              id="isSoldStatus"
            >
            <label class="form-check-label" for="isSoldStatus">
              表示停止
            </label>
          </div>
          <div v-if="$v.saleFromDatetime.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.saleFromDatetime.required">Fromが入力されていません。</p>
          </div>
          <div v-if="$v.saleToDatetime.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.saleToDatetime.required">Toが入力されていません。</p>
          </div>
        </div>
        <!-- 手仕舞い -->
        <div class="col-12 mb-4">
          <label class="form-label w-100">手仕舞い</label>
          <div class="d-inline-block">
            <input
              v-model="liquidateDate"
              name="liquidateDate"
              type="text"
              class="form-control"
              placeholder="手仕舞い日"
              maxlength="2"
            >
          </div>
          <div class="d-inline-block">日前</div>
          <div class="d-inline-block">
            <input
              v-model="liquidateTime"
              name="liquidateTime"
              type="text"
              class="form-control"
              placeholder="時間（hh:mm)"
              maxlength="5"
            >
          </div>
          <div v-if="$v.liquidateDate.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.liquidateDate.required">手仕舞い日が入力されていません。</p>
          </div>
          <div v-if="$v.liquidateTime.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.liquidateTime.required">時間が入力されていません。</p>
          </div>
        </div>
        <!-- サービス手数料率 -->
        <div v-if="isAdmin" class="col-4 mb-4">
          <label class="form-label">サービス手数料率</label>
          <input
            v-model="serviceCommissionPercentage"
            name="serviceCommissionPercentage"
            type="text"
            class="form-control"
            placeholder="サービス手数料率"
            maxlength="3"
          >
          <div v-if="$v.serviceCommissionPercentage.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.serviceCommissionPercentage.required">サービス手数料率が入力されていません。</p>
          </div>
        </div>
      </div>

      <!-- 商品タグ -->
      <div :style="tagTabStatus ? 'height: inherit' : 'height: 55px'" class="baseShadow p-3 mb-5 overflow-hidden">
        <input v-model="JSON.stringify(productTag)" type="hidden" name="productTag">
        <div class="d-flex">
          <div class="me-auto">
            <h5 class="mb-4 fw-bold">商品タグ</h5>
          </div>
          <div style="cursor: pointer">
            <img
              @click="onTabToggle('tagTabStatus')"
              :style="tagTabStatus ? 'transform: inherit' : 'transform: scale(1, -1)'"
              src="/images/icon/arow.svg"
            >
          </div>
        </div>
        <vue-tags-input
          v-model="productTagInput"
          :tags="productTag"
          :autocomplete-items="onProductTagFilter"
          @tags-changed="onProductTagChange"
          style="max-width: 100%;"
        />
      </div>

      <!-- 商品画像 -->
      <div :style="imageTabStatus ? 'height: inherit' : 'height: 55px'" class="baseShadow p-3 mb-5 overflow-hidden">
        <input v-model="JSON.stringify(productImage)" type="hidden" name="productImage">
        <div class="d-flex">
          <div class="me-auto">
            <h5 class="mb-4 fw-bold">商品画像</h5>
          </div>
          <div style="cursor: pointer">
            <img
              @click="onTabToggle('imageTabStatus')"
              :style="imageTabStatus ? 'transform: inherit' : 'transform: scale(1, -1)'"
              src="/images/icon/arow.svg"
            >
          </div>
        </div>
        <div
          v-for="(item, index) of productImage"
          :key="index"
          class="form-check-inline mb-3 position-relative"
        >
          <img :src="item.path" style="width: 136px; object-fit: cover; height: 86px;">
          <button
            @click="onDeleteFileData(index)"
            type="button"
            class="btn-close position-absolute"
            style="right: 5px; top: 5px; font-size: 14px"
            :value="index"
          ></button>
        </div>
        <div class="form-check-inline">
          <button @click="onImageModalOpen" class="border-0 bg-white" type="button">
            <img src="/images/icon/plus.svg">
          </button>
        </div>        
      </div>

      <!-- おすすめ商品 -->
      <div :style="recommendTabStatus ? 'height: inherit' : 'height: 55px'" class="baseShadow p-3 mb-5 overflow-hidden">
        <input v-model="JSON.stringify(cartRecommendTag)" type="hidden" name="cartRecommendTag">
        <input v-model="JSON.stringify(orderRecommendTag)" type="hidden" name="orderRecommendTag">
        <div class="d-flex">
          <div class="me-auto">
            <h5 class="mb-4 fw-bold">おすすめ商品</h5>
          </div>
          <div style="cursor: pointer">
            <img
              @click="onTabToggle('recommendTabStatus')"
              :style="recommendTabStatus ? 'transform: inherit' : 'transform: scale(1, -1)'"
              src="/images/icon/arow.svg"
            >
          </div>
        </div>
        <div class="mb-4">
          <label class="form-label mb-3">カート画面おすすめ商品表示エリア</label>
          <vue-tags-input
            v-model="cartRecommendTagInput"
            :tags="cartRecommendTag"
            :autocomplete-items="onCartRecommendTagFilter"
            @tags-changed="onCartRecommendTagChange"
            style="max-width: 100%;"
          />
        </div>
        <div>
          <label class="form-label mb-3">注文完了画面おすすめ商品表示エリア</label>
          <vue-tags-input
            v-model="orderRecommendTagInput"
            :tags="orderRecommendTag"
            :autocomplete-items="onOrderRecommendTagFilter"
            @tags-changed="onOrderRecommendTagChange"
            style="max-width: 100%;"
          />
        </div>
      </div>

      <!-- 利用方法 -->
      <div :style="usageTabStatus ? 'height: inherit; overflow: inherit' : 'height: 55px; overflow: hidden'" class="baseShadow p-3 mb-5">
        <div class="d-flex">
          <div class="me-auto">
            <h5 class="mb-4 fw-bold">利用方法</h5>
          </div>
          <div style="cursor: pointer">
            <img
              @click="onTabToggle('usageTabStatus')"
              :style="usageTabStatus ? 'transform: inherit' : 'transform: scale(1, -1)'"
              src="/images/icon/arow.svg"
            >
          </div>
        </div>
        <!-- 利用期間 -->
        <div class="form-group mb-4">
          <input v-model="JSON.stringify(usePeriodElement)" type="hidden" name="usePeriodElement">
          <label class="form-label w-100">利用期間</label>
          <div class="col-12 mb-3">
            <div class="form-check form-check-inline">
              <input
                v-model="usePeriodElement"
                value="日付指定"
                class="form-check-input"
                type="radio"
                id="日付指定"
              >
              <label class="form-check-label" for="日付指定">日付指定</label>
            </div>
            <div class="d-inline-block">
              <vue-ctk-date-time-picker
                v-model="useFromDatetime"
                name="useFromDatetime"
                formatted="YYYY/MM/DD"
                only-date
                :label="'From'"
                position="top"
                :disabled="usePeriodElement !== '日付指定'"
              /></vue-ctk-date-time-picker>
            </div>
            <div class="d-inline-block">〜</div>
            <div class="d-inline-block">
              <vue-ctk-date-time-picker
                v-model="useToDatetime"
                name="useToDatetime"
                formatted="YYYY/MM/DD"
                only-date
                :label="'To'"
                position="top"
                :disabled="usePeriodElement !== '日付指定'"
              /></vue-ctk-date-time-picker>
            </div>
          </div> 
          <div class="col-12 mb-3">
            <div class="form-check form-check-inline">
              <input
                v-model="usePeriodElement"
                value="期限指定"
                class="form-check-input"
                type="radio"
                id="期限指定"
              >
              <label class="form-check-label" for="期限指定">期限指定</label>
            </div>
            <div class="d-inline-block">
              <input
                v-model="useLimitHours"
                :disabled="usePeriodElement !== '期限指定'"
                name="useLimitHours"
                type="text"
                class="form-control mb-2"
                placeholder="有効期限（0.0h）"
              />
            </div>
          </div>
          <div class="col-12 mb-3">
            <div class="form-check form-check-inline">
              <input
                v-model="usePeriodElement"
                value="時間指定"
                class="form-check-input"
                type="radio"
                id="時間指定"
              >
              <label class="form-check-label" for="時間指定">時間指定</label>
            </div>
          </div>
          <div class="col-12">
            <div class="form-check form-check-inline">
              <input
                v-model="usePeriodElement"
                value="無期限"
                class="form-check-input"
                type="radio"
                id="無期限"
              >
              <label class="form-check-label" for="無期限">無期限</label>
            </div>
          </div>
          <div v-if="$v.usePeriodElement.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.usePeriodElement.required">利用期間が選択されていません。</p>
          </div>
          <div class="text-danger fw-bold mt-3">
            <p v-if="!useFromDatetimeCheck">Fromが入力されていません。</p>
          </div>
          <div class="text-danger fw-bold mt-3">
            <p v-if="!useToDatetimeCheck">Toが入力されていません。</p>
          </div>
          <div class="text-danger fw-bold mt-3">
            <p v-if="!useLimitHoursCheck">有効期限が入力されていません。</p>
          </div>
          <div class="text-danger fw-bold mt-3">
            <p v-if="!usePathElementCheck">フリーパス区分が入力されていません。</p>
          </div>
        </div>
        <!-- 利用区分 -->
        <div class="col-12 mb-4">
          <input v-model="JSON.stringify(useWayElement)" type="hidden" name="useWayElement">
          <input v-model="JSON.stringify(usePathElement)" type="hidden" name="usePathElement">
          <label class="form-label w-100">利用区分</label>
          <div v-if="displayType === 'registSet' || displayType === 'detailSet'" class="form-check mb-2 w-25">
            <input
              v-model="useWayElement"
              class="form-check-input"
              type="radio"
              id="設定引継"
              value="設定引継"
            >
            <label class="form-check-label" for="設定引継">設定を引き継ぐ</label>
          </div>
          <div class="form-check mb-2 w-25">
            <input
              v-model="useWayElement"
              class="form-check-input"
              type="radio"
              id="画面提示"
              value="画面提示"
            >
            <label class="form-check-label" for="画面提示">画面提示</label>
          </div>
          <div class="form-check mb-2 w-25">
            <input
              v-model="useWayElement"
              class="form-check-input"
              type="radio"
              id="電子もぎり"
              value="電子もぎり"
            >
            <label class="form-check-label" for="電子もぎり">電子もぎり</label>
          </div>
          <div v-if="isAdmin" class="col-12 mb-3">
            <div class="form-check form-check-inline">
              <input
                v-model="useWayElement"
                class="form-check-input"
                type="radio"
                id="顔認証"
                value="顔認証"
              >
              <label class="form-check-label" for="顔認証">顔認証</label>
            </div>
            <div class="d-inline-block">
              <input
                v-model="usePathElement"
                :disabled="useWayElement !== '顔認証'"
                type="text"
                class="form-control"
                placeholder="フリーパス区分を入力"
              >
            </div>
          </div>
          <div class="form-check mb-2 w-25">
            <input
              v-model="useWayElement"
              class="form-check-input"
              type="radio"
              id="QR提示"
              value="QR提示"
            >
            <label class="form-check-label" for="QR提示">QR提示</label>
          </div>
          <div v-if="isAdmin" class="form-check mb-2 w-25">
            <input
              v-model="useWayElement"
              class="form-check-input"
              type="radio"
              id="QR提示（HL換券）"
              value="QR提示（HL換券）"
            >
            <label class="form-check-label" for="QR提示（HL換券）">QR提示（HL換券）</label>
          </div>
          <div v-if="$v.useWayElement.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.useWayElement.required">利用区分が選択されていません。</p>
          </div>
          <div class="text-danger fw-bold mt-3">
            <p v-if="!usePathElementCheck">フリーパス区分が入力されていません。</p>
          </div>
        </div>
        <!-- 利用説明 -->
        <div class="col-6 mb-4">
          <label class="form-label">利用説明</label>
          <textarea
            v-model="howToUse"
            name="howToUse"
            rows="3"
            class="form-control mb-2"
            maxlength="400"
          ></textarea>
        </div>
        <div v-if="$v.howToUse.$dirty" class="text-danger fw-bold mt-3">
          <p v-if="!$v.howToUse.required">利用説明が入力されていません。</p>
        </div>
      </div>






      <!-- 販売種別 -->
      <!-- <div class="mb-4">
        <label class="form-label">販売種別</label>
        <div class="form-check mb-2 w-50">
          <input
            v-model="salesKindType"
            name="salesKindType"
            class="form-check-input"
            type="radio"
            id="sales_1"
            value="1"
          >
          <label class="form-check-label" for="sales_1">設定を引継ぐ</label>
        </div>
        <div class="form-check mb-2 w-50">
          <input
            v-model="salesKindType"
            name="salesKindType"
            class="form-check-input"
            type="radio"
            id="sales_2"
            value="2"
          >
          <label class="form-check-label" for="sales_2">指定なし</label>
        </div>
        <div class="form-check mb-2 w-50">
          <input
            v-model="salesKindType"
            name="salesKindType"
            class="form-check-input"
            type="radio"
            id="sales_3"
            value="3"
          >
          <label class="form-check-label" for="sales_3">利用日指定</label>
        </div>
        <div class="form-check mb-2 w-50">
          <input
            v-model="salesKindType"
            name="salesKindType"
            class="form-check-input"
            type="radio"
            id="sales_4"
            value="4"
          >
          <label class="form-check-label" for="sales_4">利用日・時間帯指定</label>
        </div>
        <div v-if="salesKindType === '3' || salesKindType === '4'" class="d-flex mb-3">
          <div class="col-1"></div>
          <div class="col-11">
            <label class="form-label w-100">取扱時間</label>
            <div class="d-inline-block">
              <vue-ctk-date-time-picker
                name="salesKindFrom"
                v-model="salesKindFrom"
                formatted="YYYY/MM/DD"
                only-date
                :min-date="minDate"
                :label="'From'"
                position="top"
              /></vue-ctk-date-time-picker>
            </div>
            <div class="d-inline-block">〜</div>
            <div class="d-inline-block">
              <vue-ctk-date-time-picker
                name="salesKindTo"
                v-model="salesKindTo"
                formatted="YYYY/MM/DD"
                only-date
                :min-date="minDate"
                :label="'To'"
                position="top"
              /></vue-ctk-date-time-picker>
            </div>
          </div>
        </div>
        <div v-if="salesKindType === '4'" class="d-flex">
          <div class="col-1"></div>
          <div class="col-11">
            <label class="form-label w-100">時間間隔</label>
            <select v-model="salesKindInterval" name="salesKindInterval" class="form-select w-25">
              <option selected></option>
              <option value="15">15分</option>
              <option value="30">30分</option>
              <option value="60">60分</option>
            </select>
          </div>
        </div>
      </div> -->
      <!-- 在庫管理 -->
      <!-- <div class="col-12 mb-4">
        <label class="form-label w-100">在庫管理</label>
        <div class="form-check form-check-inline">
          <input
            v-model="stockManagementType"
            name="stockManagementType"
            class="form-check-input"
            type="radio"
            id="stock_1"
            value="1"
          >
          <label class="form-check-label" for="stock_1">設定を引継ぐ</label>
        </div>
        <div class="form-check form-check-inline">
          <input
            v-model="stockManagementType"
            name="stockManagementType"
            class="form-check-input"
            type="radio"
            id="stock_2"
            value="2"
          >
          <label class="form-check-label" for="stock_2">在庫管理なし</label>
        </div>
        <div class="form-check form-check-inline">
          <input
            v-model="stockManagementType"
            name="stockManagementType"
            class="form-check-input"
            type="radio"
            id="stock_3"
            value="3"
          >
          <label class="form-check-label" for="stock_3">DMP在庫管理</label>
        </div>
        <div class="form-check form-check-inline">
          <input
            v-model="stockManagementType"
            name="stockManagementType"
            class="form-check-input"
            type="radio"
            id="stock_4"
            value="4"
          >
          <label class="form-check-label" for="stock_4">HL在庫管理</label>
        </div>
        <div v-if="stockManagementType === '3'" class="col-4 mt-2">
          <input v-model="JSON.stringify(stockManagementItem)" type="hidden" name="stockManagementItem">
          <select v-model="stockManagementItem" class="form-select">
            <option hidden value="">在庫ID</option>
            <option
              v-for="item in stockDmps"
              :key="item.id"
              :value="item"
            >{{ item.name }}</option>
          </select>
        </div>
      </div> -->

      <!-- 年齢区分 -->
      <div :style="agesTabStatus ? 'height: inherit' : 'height: 55px'" class="baseShadow p-3 mb-5 overflow-hidden">
        <input v-model="JSON.stringify(ageCategory)" type="hidden" name="ageCategory">
        <div class="d-flex">
          <div class="me-auto">
            <h5 class="mb-4 fw-bold">年齢区分</h5>
          </div>
          <div style="cursor: pointer">
            <img
              @click="onTabToggle('agesTabStatus')"
              :style="agesTabStatus ? 'transform: inherit' : 'transform: scale(1, -1)'"
              src="/images/icon/arow.svg"
            >
          </div>
        </div>
        <div class="col-8">
          <table class="table align-middle">
            <thead>
              <tr>
                <th scope="col">#</th>
                <th scope="col">年齢区分</th>
                <th scope="col"></th>
              </tr>
            </thead>
            <tbody>
              <tr v-for="(item, index) in ages" :key="index">
                <th>{{ index + 1 }}</th>
                <td>{{ item.name }}</td>
                <td>
                  <!-- <input
                    :checked="ageCategory.some(i => i.name === item.name)"
                    @change="onAgeCategoryChange($event, item)"
                    class="form-check-input"
                    type="checkbox"
                  > -->
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>

      <!-- 料金設定 -->
      <div :style="priceTabStatus ? 'height: inherit' : 'height: 55px'" class="baseShadow p-3 mb-5 overflow-hidden">
        <div class="d-flex">
          <div class="me-auto">
            <h5 class="mb-4 fw-bold">料金設定</h5>
          </div>
          <div style="cursor: pointer">
            <img
              @click="onTabToggle('priceTabStatus')"
              :style="priceTabStatus ? 'transform: inherit' : 'transform: scale(1, -1)'"
              src="/images/icon/arow.svg"
            >
          </div>
        </div>
        <input v-model="priceSetting" type="hidden" name="priceSetting">
        <div class="col-8">
          <table class="table align-middle">
            <thead>
              <tr>
                <th scope="col">#</th>
                <th scope="col">料金プランID</th>
                <th scope="col">料金プラン名</th>
              </tr>
            </thead>
            <tbody>
              <tr v-for="(item, index) in priceSetting" :key="index">
                <th>{{ index + 1 }}</th>
                <td>{{ item.id }}</td>
                <td>{{ item.name }}</td>
              </tr>
            </tbody>
          </table>
        </div>
        <div style="text-align: right;">
          <input @click="onPlanPage" type="button" value="料金プラン" class="btn baseBtnGrey"/>
          <input @click="onDivisionPage" type="button" value="料金区分" class="btn baseBtnGrey"/>
          <input @click="onInventoryPage" type="button" value="在庫" class="btn baseBtnGrey"/>
        </div>
      </div>

      <!-- 保存ボタン -->
      <div class="d-flex flex-row-reverse">
        <input
          type="submit"
          value="保存"
          class="btn mt-4 baseBtnGrey"
          style="width: 156px;"
        />
      </div>
    </form>

    <!-- 商品画像モーダル -->
    <div :style="imageModal.show ? 'display: block' : 'display: none'" class="modalMain">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">ファイルアップロード</h5>
            <button @click="onImageModalClose" type="button" class="btn-close"></button>
          </div>
          <div
            @dragover.prevent="onFileDrag(true)"
            @dragleave="onFileDrag(false)"
            @drop.prevent="onFileDrop" 
            :class="{fileAreaFocus: imageModal.isFileAreaFocus}"
            class="modal-body m-3"
          >
            <p>ここにファイルをドラッグ＆ドロップ<br>または</p>
            <input type="file" @change="onFileChange"/>
          </div>
        </div>
      </div>
    </div>
    <div
      :style="imageModal.show ? 'display: block' : 'display: none'"
      class="modalBg"
      @click="onImageModalClose">
    </div>
  </main>
</div>

<script type="text/javascript">
const stockDmps= `<%- stock_dmps %>`;
const ages= `<%- ages %>`;
const tenants= `<%- tenants %>`;

const isAdmin = `<%- isAdmin %>`;
const productTags = `<%- productTags %>`;
const cartRecommendTags = `<%- cartRecommendTags %>`;
const orderRecommendTags = `<%- orderRecommendTags %>`;
const forms = `<%- forms %>`;

const VueCtkDateTimePicker = window['vue-ctk-date-time-picker'];
Vue.component('vue-ctk-date-time-picker', VueCtkDateTimePicker);

Vue.use(window.vuelidate.default);
const { required } = window.validators;

const VoerroTagsInput = window.VoerroTagsInput;
Vue.component('tags-input', VoerroTagsInput);

new Vue({
  el: "#productsRegist",
  data: {
    basicTabStatus: true,        // 基本情報（タブ）
    agesTabStatus: true,         // 年齢区分（タブ）
    usageTabStatus: true,        // 利用方法（タブ）
    tagTabStatus: true,          // 商品タグ（タブ）
    imageTabStatus: true,        // 商品画像（タブ）
    recommendTabStatus: true,    // おすすめ商品（タブ）
    priceTabStatus: true,        // 料金設定（タブ）
    qrParam: '',                 // 利用方法（QR読込）
    displayType: "",             // フォーマットタイプ
    productTagInput: '',         // 商品タグ（input）
    cartRecommendTagInput: '',   // おすすめカートタグ（input）
    orderRecommendTagInput: '',  // おすすめ注文タグ（input）


    useFromDatetimeCheck: true,  // 利用期間 from（入力チェック）
    useToDatetimeCheck: true,    // 利用期間 to（入力チェック）
    useLimitHoursCheck: true,    // 利用期限（入力チェック）
    usePathElementCheck: true,   // フリーパス区分（入力チェック）
    // 商品画像モーダル
    imageModal: {
      isFileAreaFocus: false,
      show: false,
    },
    // APIデータ
    stockDmps: JSON.parse(stockDmps),
    ages: JSON.parse(ages),
    tenants: JSON.parse(tenants),

    isAdmin: JSON.parse(isAdmin),
    productTags: JSON.parse(productTags),
    cartRecommendTags: JSON.parse(cartRecommendTags),
    orderRecommendTags: JSON.parse(orderRecommendTags),
    forms: JSON.parse(forms),
    // 基本情報
    productCode: "",                  // 商品コード
    productName: "",                  // 商品名
    explain: "",                      // 商品説明
    notes: "",                        // 注意事項
    displayFromDatetime: null,        // 表示期間 (From)
    displayToDatetime: null,          // 表示期間 (To)
    isDisplayedStatus: false,         // 表示期間 (表示停止)
    saleFromDatetime: null,           // 販売期間 (From)
    saleToDatetime: null,             // 販売期間 (To)
    isSoldStatus: false,              // 販売期間 (表示停止)
    liquidateDate: "",                // 手仕舞い日
    liquidateTime: "",                // 時間（hh:mm)
    serviceCommissionPercentage: "",  // サービス手数料率
    productTag: [],                   // 商品タグ
    productImage: [],                 // 商品画像
    cartRecommendTag: [],             // おすすめカートタグ
    orderRecommendTag: [],            // おすすめ注文タグ



    usePeriodElement: "",             // 利用期間 (From)
    useFromDatetime: null,            // 利用期間 (From)
    useToDatetime: null,              // 利用期間 (To)
    useLimitHours: "",                // 利用期限
    useWayElement: "",                // 利用区分
    usePathElement: "",               // フリーパス区分
    howToUse: "",                     // 利用説明
  },
  computed: {
    /**
     * 商品タグ（フィルタリング）
     */
    onProductTagFilter() {
      return this.productTags.filter(i => {
        return i.text.toLowerCase().indexOf(this.productTagInput.toLowerCase()) !== -1;
      });
    },
    /**
     * おすすめカートタグ（フィルタリング）
     */
    onCartRecommendTagFilter() {
      return this.cartRecommendTags.filter(i => {
        return i.text.toLowerCase().indexOf(this.cartRecommendTagInput.toLowerCase()) !== -1;
      });
    },
    /**
     * おすすめ注文タグ（フィルタリング）
     */
    onOrderRecommendTagFilter() {
      return this.orderRecommendTags.filter(i => {
        return i.text.toLowerCase().indexOf(this.orderRecommendTagInput.toLowerCase()) !== -1;
      });
    },
  },
  validations: {
    productName: { required },
    explain: { required },
    displayFromDatetime: { required },
    displayToDatetime: { required },
    saleFromDatetime: { required },
    saleToDatetime: { required },
    liquidateDate: { required },
    liquidateTime: { required },
    serviceCommissionPercentage: { required },
    usePeriodElement: { required },
    useWayElement: { required },
    howToUse: { required },
  },
  created() {
    this.conversionTag();
    this.setInitData();
  },
  methods: {
    /**
     * 登録情報セット
     */ 
    setInitData() {
      this.productCode = this.forms.productCode;
      this.productName = this.forms.productName;
      this.explain = this.forms.explain;
      this.notes = this.forms.notes;
      this.displayFromDatetime = this.forms.displayFromDatetime;
      this.displayToDatetime = this.forms.displayToDatetime;
      this.isDisplayedStatus = this.forms.isDisplayedStatus;
      this.saleFromDatetime = this.forms.saleFromDatetime;
      this.saleToDatetime = this.forms.saleToDatetime;
      this.isSoldStatus = this.forms.isSoldStatus;
      this.liquidateDate = this.forms.liquidateDate;
      this.liquidateTime = this.forms.liquidateTime;
      this.serviceCommissionPercentage = this.forms.serviceCommissionPercentage;
      if(this.forms.productTag) this.productTag = this.forms.productTag;
      if(this.forms.productImage) this.productImage = this.forms.productImage;
      if(this.forms.cartRecommendTag) this.cartRecommendTag = this.forms.cartRecommendTag;
      if(this.forms.orderRecommendTag) this.orderRecommendTag = this.forms.orderRecommendTag;
      
      this.usePeriodElement = this.forms.usePeriodElement;
      this.useFromDatetime = this.forms.useFromDatetime;
      this.useToDatetime = this.forms.useToDatetime;
      this.useLimitHours = this.forms.useLimitHours;

      
      this.useWayElement = this.forms.useWayElement;
      this.usePathElement = this.forms.usePathElement;
      this.howToUse = this.forms.howToUse;
      switch (location.pathname) {
        case '/products/regist':
          this.displayType = 'regist';
          break;
        case '/products/detail':
          this.displayType = 'detail';
          break;
        case '/products/registSet':
          this.displayType = 'registSet';
          break;
        case '/products/detailSet':
          this.displayType = 'detailSet';
          break;          
        default:
      }
    },
    /**
     * アコーディオン
     */
    onTabToggle(target) {
      this[target] = !this[target];
    },
    /**
     * タグ（フォーマット変換）
     */
    conversionTag() {
      this.productTags.forEach(item => {
        item.text = item.tagString;
      });
      if(this.forms.productTag) {
        this.forms.productTag.forEach(item => {
          item.text = item.tagString;
        });
      }
      this.cartRecommendTags.forEach(item => {
        item.text = item.tagString;
      });
      if(this.forms.cartRecommendTag) {
        this.forms.cartRecommendTag.forEach(item => {
          item.text = item.tagString;
        });
      }
      this.orderRecommendTags.forEach(item => {
        item.text = item.tagString;
      });
      if(this.forms.orderRecommendTag) {
        this.forms.orderRecommendTag.forEach(item => {
          item.text = item.tagString;
        });
      }
    },
    /**
     * 商品タグ（登録データ作成）
     */
    onProductTagChange(item) {
      let resultTags = [];
      item.forEach((value) => {
        this.productTags.forEach((i) => {
          if(i.text.toLowerCase().indexOf(value.text.toLowerCase()) !== -1) {
            resultTags.push(i)
          } 
        })
      });
      this.productTag = resultTags;
    },
    /**
     * おすすめカートタグ（登録データ作成）
     */
    onCartRecommendTagChange(item) {
      let resultTags = [];
      item.forEach((value) => {
        this.cartRecommendTags.forEach((i) => {
          if(i.text.toLowerCase().indexOf(value.text.toLowerCase()) !== -1) {
            resultTags.push(i)
          } 
        })
      });
      this.cartRecommendTag = resultTags;
    },
    /**
     * おすすめ注文タグ（登録データ作成）
     */
    onOrderRecommendTagChange(item) {
      let resultTags = [];
      item.forEach((value) => {
        this.orderRecommendTags.forEach((i) => {
          if(i.text.toLowerCase().indexOf(value.text.toLowerCase()) !== -1) {
            resultTags.push(i)
          } 
        })
      });
      this.orderRecommendTag = resultTags;
    },
    /**
     * 商品画像モーダル（Open）
     */ 
    onImageModalOpen() {
      this.imageModal.show = true;
    },
    /**
     * 商品画像モーダル（Close）
     */ 
    onImageModalClose() {
      this.imageModal.show = false;
    },
    /**
     * 商品画像モーダル（画像ドラッグ）
     */
    onFileDrag(flag) {
      this.imageModal.isFileAreaFocus = flag;
    },
    /**
     * 商品画像モーダル（画像ドロップ 更新）
     */
    onFileDrop(event) {
      this.imageModal.isFileAreaFocus = false;
      const files = event.dataTransfer.files;
      if (files.length !== 1 || files[0].type.indexOf("image") !== 0) {
        return;
      }
      this.createFileData(files);
    },
    /**
     * 商品画像モーダル（ファイル選択 更新）
     */
    onFileChange(event) {
      const files = event.target.files;
      if (files.length !== 1 || files[0].type.indexOf("image") !== 0) {
        return;
      }
      this.createFileData(files);
    },
    /**
     * 商品画像モーダル（データ作成）
     */
    createFileData(files) {
      const reader = new FileReader();
      reader.readAsDataURL(files[0]);
      reader.onloadend = () => {
        this.productImage.push({ path: reader.result })
        this.onImageModalClose();
      };
    },
    /**
     * 商品画像モーダル（画像削除）
     */
    onDeleteFileData(target) {
      this.productImage.splice(target, 1);
    },
    /**
     * 商品画像モーダル（画像削除）
     */
    onDeleteFileData(target) {
      this.productImage.splice(target, 1);
    },
    



    /**
     * 利用期間 From（入力チェック）
     */
     validationUseFromDatetime() {
      this.useFromDatetimeCheck = false;
      if(this.usePeriodElement === '日付指定') {
        if(this.useFromDatetime) this.useFromDatetimeCheck = true;
      } else {
        this.useFromDatetimeCheck = true;
      }
    },
    /**
     * 利用期間 To（入力チェック）
     */
     validationUseToDatetime() {
      this.useToDatetimeCheck = false;
      if(this.usePeriodElement === '日付指定') {
        if(this.useToDatetime) this.useToDatetimeCheck = true;
      } else {
        this.useToDatetimeCheck = true;
      }
    },
    /**
     * 利用期限（入力チェック）
     */
     validationUseLimitHours() {
      this.useLimitHoursCheck = false;
      if(this.usePeriodElement === '期限指定') {
        if(this.useLimitHours) this.useLimitHoursCheck = true;
      } else {
        this.useLimitHoursCheck = true;
      }
    },
    /**
     * フリーパス区分（入力チェック）
     */
     validationUsePathElement() {
      this.usePathElementCheck = false;
      if(this.useWayElement !== '顔認証') {
        this.usePathElementCheck = true;
        this.usePathElement = '';
        document.productsForm.usePathElement.value = '';
      } else {
        if(this.usePathElement) this.usePathElementCheck = true;
      }
    },
    /**
     * 登録処理
     */
    onRegist() {      
      this.$v.$touch();


      this.validationUseFromDatetime();
      this.validationUseToDatetime();
      this.validationUseLimitHours();
      this.validationUsePathElement();
      if(!this.$v.$invalid
        && this.useFromDatetimeCheck
        && this.useToDatetimeCheck
        && this.useLimitHoursCheck
        && this.usePathElementCheck
      ) {
        document.productsForm.method="post";
        document.productsForm.action = "/products/regist";
        document.productsForm.submit();
      }
    },











    
    // 年齢区分（データ更新）
    onAgeCategoryChange(event, value) {
      if(event.target.checked) {
        this.ageCategory.push(value)
      } else {
        this.ageCategory = this.ageCategory.filter(o => o.name !== value.name);
      }
    },
    // 利用方法（QR読込 追加）    
    onQrParamAdd() {
      if(this.qrParam) this.usageMethodItem.push(this.qrParam);
    },
    // 利用方法（QR読込 画像取得）    
    onQrDownload() {
      const link = document.createElement('a');
      link.href = "";
      link.download = `画像`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    },
    // 利用施設（データ更新）
    onTenantChange(event, value) {
      if(event.target.checked) {
        this.tenantsUsed.push(value)
      } else {
        this.tenantsUsed = this.tenantsUsed.filter(o => o.id !== value.id);
      }
    },
    // 画面遷移（料金プラン一覧）
    onPlanPage() {
      window.location.href = `/plans/reference?productId=${this.productId}`;
    },
    // 画面遷移（料金区分一覧）
    onDivisionPage() {
      window.location.href = `/divisions/reference?productId=${this.productId}`;
    },
    // 画面遷移（在庫一覧）
    onInventoryPage() {
      window.location.href = `/inventorys/reference?productId=${this.productId}`;
    },
  }
})
</script>
</body>
</html>
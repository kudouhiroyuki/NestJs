<%- include('../../partials/head'); %>

<body>
<div class="layout">
  <%- include('../../partials/header'); %>

  <%- include('../../partials/sidebar'); %>

  <main id="notificationsIndex">
    <h4 class="mb-4 fw-bold" style="color:#0069D9;">
      <img src="/images/icon/notification.svg" style="width: 24px;">
      お知らせ照会
    </h4>

    <div class="d-flex flex-row-reverse mb-5">
      <a href="/divisions/1001/regist">
        <input type="button" value="新規登録" class="btn baseBtnBlue" style="width: 156px">
      </a>
    </div>

    <!-- 検索フォーム -->
    <form @submit.prevent="onSerch">
      <div :style="serchTabStatus ? 'height: inherit' : { height: '55px', overflow: 'hidden' }" class="baseShadow p-3 mb-5">
        <div class="d-flex">
          <div class="me-auto"><img src="/images/icon/serchBlue.svg"></div>
          <div style="cursor: pointer">
            <img
              @click="onTabToggle('serchTabStatus')"
              :style="serchTabStatus ? 'transform: inherit' : 'transform: scale(1, -1)'"
              src="/images/icon/arow.svg"
            >
          </div>
        </div>
        <div class="row" style="align-items: flex-end; padding: 2rem 3rem;">
          <!-- キーワード -->
          <div class="row mb-1">
            <div class="col-4">
              <div class="d-inline-block" style="width: 214px;">
                <input
                  @input="onFormChange"
                  :value="keyword"
                  name="keyword"
                  type="text"
                  class="form-control mb-3"
                  placeholder="氏名"
                >
              </div>
            </div>
          </div>
          <!-- 開始・終了日時 -->
          <div class="row mb-4" style="align-items: flex-end;">
            <input v-model="startDate" type="hidden" name="startDate">
            <input v-model="endDate" type="hidden" name="endDate">
            <div class="col-8">
              <div class="d-inline-block">
                <label class="form-label fw-bold">公開日時</label>
                <vue-ctk-date-time-picker
                  v-model="startDate"
                  :format="'YYYY/MM/DD hh:mm a'"
                  :formatted="'YYYY-MM-DD HH:mm a'"
                  :label="'From'"
                  position="top"
                /></vue-ctk-date-time-picker>
              </div>
              <div class="d-inline-block" style="margin: 0 20px;">
                〜
              </div>
              <div class="d-inline-block">
                <vue-ctk-date-time-picker
                  v-model="endDate"
                  :format="'YYYY/MM/DD hh:mm a'"
                  :formatted="'YYYY-MM-DD HH:mm a'"
                  :label="'To'"
                  position="top"
                /></vue-ctk-date-time-picker>
              </div>
            </div>
            <div class="col-4 text-end">
              <button type="submit" class="btn mt-4 baseBtnBlue" style="width: 156px;">
                <img src="/images/icon/serchWhite.svg">
                検索
              </button>  
            </div>
          </div>
          <div v-if="$v.fullName.$dirty || $v.mail.$dirty || $v.tell.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.fullName.required && !$v.mail.required && !$v.tell.required">氏名、メールアドレス、電話番号のいずれかを入力して下さい。</p>
          </div>
        </div>
      </div>
    </form>
   
    <!-- 一覧テーブル -->
    <div style="overflow: auto; width: 100%; height: 250px;">
      <table class="table align-middle mb-5">
        <thead>
          <tr>
            <th style="position: sticky; top: 0; left: 0; background: white;">お知らせID</th>
            <th style="position: sticky; top: 0; left: 0; background: white;">お知らせタイトル</th>
            <th style="position: sticky; top: 0; left: 0; background: white;">公開日時</th>
            <th style="position: sticky; top: 0; left: 0; background: white;">公開状態</th>
          </tr>
        </thead>
        <tbody>
          <tr v-for="(item, index) in notifications" :key="index">
            <td>{{ item.noticeId }}</td>
            <td>{{ item.noticeTitle }}</td>
            <td>{{ item.dateTime }}</td>
            <td>{{ item.public }}</td>
          </tr>
        </tbody>
      </table>
    </div>

    <!-- ページネーション -->
    <nav class="d-flex justify-content-center" aria-label="Page navigation">
      <ul class="pagination mb-0">
        <li :class="{'disabled': Number(pageNumber) === 1}" class="page-item">
          <button
            @click="onPageChange(Number(pageNumber) - 1)"
            type="button"
            class="page-link">Previous
          </button>
        </li>
        <li
          v-for="value of totalPageCount"
          :key="value"
          :class="{'active': value === Number(pageNumber)}"
          class="page-item"
        >
          <button
            @click="onPageChange(value)"
            type="button"
            class="page-link">{{value}}
          </button>
        </li>
        <li :class="{'disabled': Number(pageNumber) === Number(totalPageCount)}" class="page-item">
          <button
            @click="onPageChange(Number(pageNumber) + 1)"
            type="button"
            class="page-link">Next
          </button>
        </li>
      </ul>
    </nav>
  </main>
</div>

<script type="text/javascript">
const notifications = `<%- notifications %>`;
const totalPageCount = `<%- totalPageCount %>`;

const queryParam = new URLSearchParams(location.search);

const VueCtkDateTimePicker = window['vue-ctk-date-time-picker'];
Vue.component('vue-ctk-date-time-picker', VueCtkDateTimePicker);

Vue.use(window.vuelidate.default);
const { required, minValue, maxValueValue, minValueValue } = window.validators;

new Vue({
  el: "#notificationsIndex",
  data: {
    serchTabStatus: true,          // 検索タブ
    // APIデータ
    notifications: JSON.parse(notifications),
    totalPageCount: JSON.parse(totalPageCount),
    // 検索データ
    keyword: "",
    startDate: null,                               // 開始日時 (From)
    endDate: null,                                 // 終了日時 (To)
    pageNumber: queryParam.get('pageNumber') ?? 1, // ページ番号
  },
  validations: {
    fullName: {
      required
    },
    mail: {
      required
    },
    tell: {
      required
    },
    checkTenantId: {
      required
    },
    checkVigorId: {
      required
    },
    checkStartDate: {
      required,
      minValue: value => value > new Date().getTime(),
      maxValueValue: value => value < window.checkEndDate,
    },
    checkEndDate: {
      required,
      minValue: value => value > new Date().getTime(),
      minValueValue: value => value > window.checkStartDate,
    },
  },
  created() {
    queryParam.set("pageNumber", this.pageNumber);
  },
  watch: {
    /**
     * 開始日時の変更監視（フォーマット変換）
     */
     startDate: function(newVal, oldVal) {
      this.startDate = null;
      if(newVal !== null) {
        let resultDate = moment(new Date(newVal.slice(0, -3)));
        if (newVal.match(/午後/)) resultDate.add(12, 'h').format();
        this.startDate = moment(resultDate._d).format("YYYY-MM-DD HH:mm:ss");
      }
    },
    /**
     * 終了日時の変更監視（フォーマット変換）
     */ 
    endDate: function(newVal, oldVal) {
      this.endDate = null;;
      if(newVal !== null) {
        let resultDate = moment(new Date(newVal.slice(0, -3)));
        if (newVal.match(/午後/)) resultDate.add(12, 'h').format();
        this.endDate = moment(resultDate._d).format("YYYY-MM-DD HH:mm:ss");
      }
    }
  },
  methods: {
    /**
     * アコーディオン（UI）
     */ 
     onTabToggle(target) {
      this[target] = !this[target];
    },
    /**
     * 検索条件（更新）
     */ 
    onFormChange(e) {
      this[e.target.name] = e.target.value;
      queryParam.set(e.target.name, e.target.value);
    },
    onSerch() {
      document.noticeSerch.method="get";
      document.noticeSerch.action = "/notification/reference";
      document.noticeSerch.submit();
    },
    onCsvDownload() {
      let csv = '\ufeff' + 'お知らせID,公開範囲,お知らせタイトル,タグ,投稿日時\n';
      this.tableItems.forEach(el => {
        let line = `${el['notice_id']},${el['open_range']},${el['notice_title']},${el['tag']},${el['date_time']}`;
        csv += (line + '\n');
      })
      let link = document.createElement('a');
      link.href = window.URL.createObjectURL(new Blob([csv], { type: 'text/csv' }));
      link.download = 'お知らせ一覧.csv';
      link.click();
    },
  }
})
</script>
</body>
</html>
<%- include('../../partials/head'); %>

<body>
<div class="layout">
  <%- include('../../partials/header'); %>

  <%- include('../../partials/sidebar'); %>

  <main id="ordersRegist">
    <form @submit.prevent="onSubmit" name="orders">
      <h4 class="mb-4 fw-bold" style="color:#0069D9;">
        <img src="/images/icon/order.svg" style="width: 24px;">
        <template class="fs-4">部分キャンセル商品選択</template>
      </h4>
    </form>
  </main>
</div>

<script type="text/javascript">
const forms = `<%- forms %>`;

const VueCtkDateTimePicker = window['vue-ctk-date-time-picker'];
Vue.component('vue-ctk-date-time-picker', VueCtkDateTimePicker);

Vue.use(window.vuelidate.default);
const { required, minValue } = window.validators;

new Vue({
  el: "#ordersRegist",
  data: {
    // APIデータ
    forms: JSON.parse(forms),
    // 登録データ
    transactionId: "",                 // 取引ID
    transactionStatus: "",             // 取引ステータス
    transactionDatetime: "",           // 取引日時
    purchaseTenant: "",                // 購入テナント
    paymentWayType: "",                // 支払方法
    totalFee: "",                      // 商品代金
    tenantCouponApplyFee: "",          // テナントクーポン割引額
    dmpCouponApplyFee: "",             // DMPクーポン割引額
    storePaymentCommission: "",        // コンビニ支払手数料
    orderInformations: []              // 注文情報
  },


  validations: {
    accountGroupName: {
      required,
    },
  },
  created() {
    this.setInitData();
    // テナント一覧（チェックフラグ作成）
    this.tenants.forEach(item => {
      item.tenantCheck = false;
      if(this.useTenants) {
        this.useTenants.forEach(tenant => {
          if(item.id === tenant.id) {
            item.tenantCheck = true;
          }
        });
      }
    });
  },
  methods: {
    /**
     * 登録情報セット
     */ 
     setInitData() { 
      this.transactionId = this.forms.transactionId;
      this.transactionStatus = this.forms.transactionStatus;
      this.transactionDatetime = this.forms.transactionDatetime;
      this.purchaseTenant = this.forms.purchaseTenant;
      this.paymentWayType = this.forms.paymentWayType;
      this.totalFee = this.forms.totalFee;
      this.tenantCouponApplyFee = this.forms.tenantCouponApplyFee;
      this.dmpCouponApplyFee = this.forms.dmpCouponApplyFee;
      this.storePaymentCommission = this.forms.storePaymentCommission;
      this.orderInformations = this.forms.orderInformations;
    },
    /**
     * 合計金額（商品代金 - テナントクーポン割引額 - DMPクーポン割引額 + コンビニ支払手数料）
     */ 
    calcTotalAmount() {
      return Number(this.totalFee) - Number(this.tenantCouponApplyFee) - Number(this.dmpCouponApplyFee) + Number(this.storePaymentCommission);
    },
    /**
     * 登録処理
     */ 
    onSubmit() {
      this.$v.$touch();
      this.validationUseTenants();
      if(!this.$v.$invalid && this.useTenantsCheck) {
        document.orders.method="post";
        document.orders.action = "/orders/regist";
        document.orders.submit();
      }
    }
  }
})
</script>
</body>
</html>
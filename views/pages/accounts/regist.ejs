<%- include('../../partials/head'); %>

<body>
<div class="layout">
  <%- include('../../partials/header'); %>

  <%- include('../../partials/sidebar'); %>

  <main id="accountsRegist">
    <form @submit.prevent="onSubmit" name="accounts">
      <h4 class="mb-5 fw-bold" style="color:#0069D9;">
        <img src="/images/icon/account.svg" style="width: 24px;">
        <template v-if="displayType === 'regist'" class="fs-4">アカウント登録</template>
        <template v-else class="fs-4">アカウント詳細</template>
      </h4>

      <!-- アカウントID -->
      <div v-if="displayType === 'regist'" class="row mb-5">
        <label class="form-label">アカウントID <span class="redDC3545">*必須</span></label>
        <div class="col-8">
          <input
            v-model="accountId"
            name="accountId"
            maxlength="50"
            type="text"
            class="form-control mb-2"
            placeholder="アカウントIDを入力"
          />
          <div v-if="$v.accountId.$dirty" class="text-danger fw-bold">
            <span v-if="!$v.accountId.required">必須項目が入力されていません。</span>
          </div>
        </div>
      </div>
      <div v-if="displayType === 'detail'" class="row mb-5">
        <label class="form-label">アカウントID</label>
        <div class="col-8">{{ accountId }}</div>
      </div>

      <!-- 氏名 -->
      <div class="row mb-5">
        <label class="form-label">氏名 <span class="redDC3545">*必須</span></label>
        <div class="col-4">
          <input
            v-model="familyName"
            name="familyName"
            type="text"
            class="form-control"
            maxlength="25"
            placeholder="姓"
          >
          <div v-if="$v.familyName.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.familyName.required">姓が入力されていません。</p>
            <p v-if="!$v.familyName.valid">姓は漢字のみで入力して下さい。</p>
          </div>
        </div>
        <div class="col-4">
          <input
            v-model="firstName"
            name="firstName"
            type="text"
            class="form-control"
            maxlength="25"
            placeholder="名"
          >
          <div v-if="$v.firstName.$dirty" class="text-danger fw-bold mt-3">
            <p v-if="!$v.firstName.required">名が入力されていません。</p>
            <p v-if="!$v.firstName.valid">名は漢字のみで入力して下さい。</p>
          </div>
        </div>
      </div>

      <!-- メールアドレス -->
      <div class="row mb-5">
        <label class="form-label">メールアドレス</label>
        <div class="col-8">
          <input
            v-model="email"
            name="email"
            type="text"
            class="form-control"
            maxlength="254"
            placeholder="メールアドレスを入力"
          >
        </div>
        <div v-if="$v.email.$dirty" class="text-danger fw-bold mt-3">
          <p v-if="!$v.email.email">メールアドレスの形式で入力して下さい。</p>
          <p v-if="!$v.email.valid">入力不可能な文字があります。正しい値で入力して下さい。</p>
        </div>
      </div>

      <!-- 所属会社 -->
      <div class="row mb-5">
        <label class="form-label">所属会社</label>
        <div class="col-8">
          <input
            v-model="affiliationCompany"
            name="affiliationCompany"
            type="text"
            class="form-control mb-2"
            maxlength="30"
            placeholder="所属会社を入力"
          />
        </div>
      </div>

      <!-- 部署 -->
      <div class="row mb-5">
        <label class="form-label">部署</label>
        <div class="col-8">
          <input
            v-model="department"
            name="department"
            type="text"
            class="form-control mb-2"
            maxlength="30"
            placeholder="部署を入力"
          />
        </div>
      </div>

      <!-- 管理者アカウント -->
      <div v-if="backOfficeAccount.accountStatus === 'dmp'" class="row mb-3">
        <label class="form-label">管理者アカウント</label>
        <div class="col-4">
          <input
            v-model="isSystemAdmin"
            @click="isSystemAdmin=$event.target.checked"
            class="form-check-input"
            type="checkbox"
            id="isSystemAdmin"
          >
          <label class="form-check-label" for="isSystemAdmin">
            管理者アカウント
          </label>
        </div>
      </div>

      <!-- アカウントグループ -->
      <div class="row mb-5">
        <div class="col-4">
          <label class="form-label">アカウントグループ</label>
          <select v-model="accountGroup" class="form-select">
            <option hidden value="">アカウントグループを選択</option>
            <option
              v-for="item in accountGroups"
              :key="item.id"
              :value="item.id"
            >{{ item.accountGroupName }}</option>
          </select>
        </div>
      </div>

      <!-- アクションボタン -->
      <div class="text-end">
        <button
          v-if="displayType === 'detail'"
          type="button"
          class="btn baseBtnBlue"
          style="width: 136px;font-size: 12px;margin-bottom: 10px;"
        >戻る</button>
        <button
          v-if="displayType === 'detail'"
          @click="onActionModalOpen(accountStatus)"
          type="button"
          class="btn baseBtnBlue"
          style="width: 136px;font-size: 12px;margin-bottom: 10px;"
        >停止/復旧</button>
        <button
          v-if="displayType === 'detail'"
          @click="onActionModalOpen('reset')"
          type="button"
          class="btn baseBtnBlue"
          style="width: 136px;font-size: 12px;margin-bottom: 10px;"
        >パスワードリセット</button>
        <button
          :disabled="accountGroup === ''"
          type="button"
          class="btn baseBtnBlue"
          style="width: 136px;font-size: 12px;margin-bottom: 10px;"
        >ロール選択</button>
        <button
          v-if="displayType === 'regist'"
          type="submit"
          class="btn baseBtnBlue"
          style="width: 136px;font-size: 12px;margin-bottom: 10px;"
        >登録</button>
      </div>
      
      <!-- アクションモーダル -->
      <div :style="actionModal.show ? 'display: block' : 'display: none'" class="modalMain">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">
                <template v-if="actionModal.type === 'reset'">パスワードリセット</template>
                <template v-if="actionModal.type === 'stop'">アカウント停止</template>
                <template v-if="actionModal.type === 'restoration'">アカウント復旧</template>
              </h5>
              <button @click="onActionModalClose" type="button" class="btn-close"></button>
            </div>
            <div class="modal-body m-3">
              <p v-if="actionModal.type === 'reset'">アカウントパスワードをリセットしますか？</p>
              <p v-if="actionModal.type === 'stop'">対象アカウントを停止しますか？</p>
              <p v-if="actionModal.type === 'restoration'">対象アカウントを復旧しますか？</p>
              <div class="text-end">
                <button
                  v-if="actionModal.type === 'reset'"
                  type="button"
                  class="btn baseBtnBlue" style="width: 136px;font-size: 12px; margin-bottom: 10px;"
                >リセット実行</button>
                <button
                  v-if="actionModal.type === 'stop'"
                  type="button"
                  class="btn baseBtnBlue" style="width: 136px;font-size: 12px; margin-bottom: 10px;"
                >停止実行</button>
                <button
                  v-if="actionModal.type === 'restoration'"
                  type="button"
                  class="btn baseBtnBlue" style="width: 136px;font-size: 12px; margin-bottom: 10px;"
                >復旧実行</button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        :style="actionModal.show ? 'display: block' : 'display: none'"
        class="modalBg"
        @click="onActionModalClose">
      </div>
    </form>
  </main>
</div>

<script type="text/javascript">
const accountGroups = `<%- accountGroups %>`;
const backOfficeAccount = `<%- backOfficeAccount %>`;
const forms = `<%- forms %>`;

const VueCtkDateTimePicker = window['vue-ctk-date-time-picker'];
Vue.component('vue-ctk-date-time-picker', VueCtkDateTimePicker);

Vue.use(window.vuelidate.default);
const { required, email } = window.validators;

// 漢字のみか
let regexpKanji = /^([\u{3005}\u{3007}\u{303b}\u{3400}-\u{9FFF}\u{F900}-\u{FAFF}\u{20000}-\u{2FFFF}][\u{E0100}-\u{E01EF}\u{FE00}-\u{FE02}]?)+$/mu;
// 全角があるか
let regexpZenkaku = /[^\x01-\x7E\uFF61-\uFF9F]/;

new Vue({
  el: "#accountsRegist",
  data: {
    displayType: "",
    checkDateTime: '',   // 公開日時 (入力チェック用)
    // アクションモーダル
    actionModal: {
      show: false,       // 表示
      type: '',          // タイプ（reset/stop/restoration）
      title: '',         // タイトル
    },

    // APIデータ
    accountGroups: JSON.parse(accountGroups),
    backOfficeAccount: JSON.parse(backOfficeAccount),
    forms: JSON.parse(forms),
    // 登録データ
    accountId: "",           // アカウントID
    familyName: "",          // 姓
    firstName: "",           // 名
    email: "",               // メールアドレス
    affiliationCompany: "",  // 所属会社
    department: "",          // 部署
    isSystemAdmin: false,    // 管理者アカウント

    accountGroup: "",        // アカウントグループ
    accountStatus: '',       // アカウントステータス（stop restoration）
  },
  validations: {
    accountId: {
      required,
    },
    familyName: {
      required,
      valid: function(value) {
        let result = false;
        if (new RegExp(regexpKanji).test(value)) result = true;
        return result;
      }
    },
    firstName: {
      required,
      valid: function(value) {
        let result = false;
        if (new RegExp(regexpKanji).test(value)) result = true;
        return result;
      }
    },
    email: {
      email,
      valid: function(value) {
        let result = false;
        if (!new RegExp(regexpZenkaku).test(value)) result = true;
        return result;
      }
    },
    checkDateTime: {
      required,
      minValue: value => value > new Date().getTime(),
    },
  },
  created() {
    this.setInitData();
  },
  methods: {
    /**
     * 登録情報セット
     */ 
     setInitData() { 
      this.accountId = this.forms.accountId;
      this.familyName = this.forms.familyName;
      this.firstName = this.forms.firstName;
      this.email = this.forms.email;
      this.affiliationCompany = this.forms.affiliationCompany;
      this.department = this.forms.department;
      this.isSystemAdmin = this.forms.isSystemAdmin;
      this.accountStatus = this.forms.accountStatus;
      location.href.match(/regist/) ? this.displayType = 'regist' : this.displayType = 'detail'
    },
    /**
     * Openモーダル（停止 復旧 パスワードリセット）
     */ 
     onActionModalOpen(type) {
      let actionType = type;
      if(type === 'stop') actionType = 'restoration';
      if(type === '' || type === 'restoration') actionType = 'stop';
      this.actionModal.show = true;
      this.actionModal.type = actionType;
    },
    /**
     * Closeモーダル（停止 復旧 パスワードリセット）
     */ 
     onActionModalClose() {
      this.actionModal.show = false;
      this.actionModal.type = '';
    },
    /**
     * 登録処理
     */ 
    onSubmit() {
      this.$v.$touch();
      if(!this.$v.$invalid) {
        document.accounts.method="post";
        document.accounts.action = "/accounts/regist";
        document.accounts.submit();
      }
    }
  }
})
</script>
</body>
</html>
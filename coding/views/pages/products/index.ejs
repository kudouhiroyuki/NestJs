<%- include('../../partials/head'); %>

<body>
<div class="layout">
  <%- include('../../partials/header'); %>

  <%- include('../../partials/sidebar'); %>

  <main id="productsindex">
    <div class="d-flex mb-5">
      <div class="me-auto">
        <h4 class="mb-4 fw-bold" style="color:#0069D9;">
          <img src="/images/icon/products.svg" style="width: 24px;">
          商品照会
        </h4>
      </div>
      <div class="d-flex flex-row-reverse mb-4">
        <button class="dropdown border-0 bg-white" type="button" data-bs-toggle="dropdown">
          <img src="/images/icon/plus.svg">
        </button>
        <ul class="dropdown-menu">
          <a href="/products/regist"><li class="dropdown-item small">商品を登録する</li></a>
          <a href="/products/registSet"><li class="dropdown-item small">セット商品を登録する</li></a>
        </ul>
        <input @click="onDownload" type="button" value="CSVダウンロード" class="btn baseBtnBlue" style="width: 156px; margin-right: 5px;">
      </div>
    </div>

    <!-- 検索フォーム -->
    <form @submit.prevent="onSerch">
      <div :style="serchTabStatus ? 'height: inherit' : { height: '55px', overflow: 'hidden' }" class="baseShadow p-3 mb-5">
        <div class="d-flex">
          <div class="me-auto"><img src="/images/icon/serchBlue.svg"></div>
          <div style="cursor: pointer">
            <img
              @click="onTabToggle('serchTabStatus')"
              :style="serchTabStatus ? 'transform: inherit' : 'transform: scale(1, -1)'"
              src="/images/icon/arow.svg"
            >
          </div>
        </div>
        <div class="row" style="align-items: flex-end; padding: 2rem 3rem;">
          <div class="col-4">
            <input
              @change="onFormChange"
              :value="id"
              name="id"
              type="text"
              class="form-control"
              placeholder="商品ID"
            >
          </div>
          <div class="col-4">
            <input
              @change="onFormChange"
              :value="keyword"
              name="keyword"
              type="text"
              class="form-control"
              placeholder="キーワード"
            >
          </div>
          <div class="col-4 text-end">
            <button type="submit" class="btn mt-4 baseBtnBlue" style="width: 156px;">
              <img src="/images/icon/serchWhite.svg">
              検索
            </button> 
          </div>
        </div>
      </div>
    </form>
      
    <!-- 一覧テーブル -->
    <table class="table align-middle mb-5">
      <thead>
        <tr>
          <th scope="col">#</th>
          <th scope="col"></th>
          <th scope="col">商品コード</th>
          <th scope="col">商品名</th>
          <th scope="col">販売ステータス</th>
          <th scope="col">表示期間</th>
          <th scope="col">公開ステータス</th>
        </tr>
      </thead>
      <tbody>
        <tr
          v-for="(item, index) in products"
          :key="index"
          @click="onActionList(item)"
          style="position: relative;"
        >
          <template v-if="item.status==='1'">
            <th>{{ index + 1 }}</th>
            <td><img :src="item.path"></td>
            <td>{{ item.productCode }}</td>
            <td>{{ item.productName }}</td>
            <td>{{ item.isSoldStatus }}</td>
            <td>{{ item.saleFromDatetime }} - {{ item.saleToDatetime }}</td>
            <td>
              <button
                @click="onDetailPage(item)"
                type="button"
                class="btn baseBtnGrey"
              >公開中</button>
              <button
                @click="onDetailPage(item)"
                type="button"
                class="btn baseBtnGrey"
              >作業中</button>
            </td>
            <td style="width: 0;">
              <ul
                :ref="item.productCode"
                class="dropdown-menu actionList"
                style="left: 50%; transform: translate(-50%, -50%);"
              >
                <a @click="onCopyPage(item)">
                  <li class="dropdown-item small">コピー</li>
                </a>
                <a @click="onPreviewPage(item)">
                  <li class="dropdown-item small">プレビュー</li>
                </a>
              </ul>
            </td>
          </template>
        </tr>
      </tbody>
    </table>
    <!-- ページネーション -->
    <nav class="d-flex justify-content-center" aria-label="Page navigation">
      <ul class="pagination mb-0">
        <li :class="{'disabled': Number(pageNumber) === 1}" class="page-item">
          <button
            @click="onPage(Number(pageNumber) - 1)"
            type="button"
            class="page-link">Previous
          </button>
        </li>
        <li
          v-for="value of totalPageCount"
          :key="value"
          :class="{'active': value === Number(pageNumber)}"
          class="page-item"
        >
          <button
            @click="onPage(value)"
            type="button"
            class="page-link">{{value}}
          </button>
        </li>
        <li :class="{'disabled': Number(pageNumber) === Number(totalPageCount)}" class="page-item">
          <button
            @click="onPage(Number(pageNumber) + 1)"
            type="button"
            class="page-link">Next
          </button>
        </li>
      </ul>
    </nav>
   
  </main>
</div>

<script type="text/javascript">
const products= `<%- products %>`;
const totalPageCount= `<%- totalPageCount %>`;

const queryParam = new URLSearchParams(location.search);
  
new Vue({
  el: "#productsindex",
  data: {
    serchTabStatus: true,                          // 検索タブ
    // APIデータ
    products: JSON.parse(products),
    totalPageCount: JSON.parse(totalPageCount),
    // 検索データ
    id: queryParam.get('id') ?? "",  // 商品ID
    keyword: queryParam.get('keyword') ?? "",
    pageNumber: queryParam.get('pageNumber') ?? 1,
  },
  created() {
    queryParam.set("id", this.id);
    queryParam.set("keyword", this.keyword);
    queryParam.set("pageNumber", this.pageNumber);
  },
  mounted() {
    /**
     * アクションリスト（hide）
     */ 
    window.addEventListener('click', (e) => {
      if(!e.target.closest('.table.align-middle')) {
        const actionList = document.querySelectorAll('.actionList');
        actionList.forEach(function(el) {
          el.style.display = 'none';
          el.closest('tr').style.backgroundColor = 'inherit';
        });
      }
    })
  },
  methods: {
    /**
     * アコーディオン
     */ 
    onTabToggle(target) {
      this[target] = !this[target];
    },
    /**
     * ダウンロード
     */
    onDownload() {
      let title = '商品画像,商品コード,商品名,販売ステータス,表示期間\n';
      this.products.forEach(el => {
        let line = `${el.path},${el.productCode},${el.productName},${el.isSoldStatus},${el.saleFromDatetime + ' - ' + el.saleToDatetime}`;
        title += (line + '\n');
      })
      let link = document.createElement('a');
      link.href = window.URL.createObjectURL(new Blob([title], { type: 'text/csv' }));
      link.download = '商品照会.csv';
      link.click();
    },
    /**
     * アクションリスト（show）
     */ 
    onActionList(item) {
      const actionList = document.querySelectorAll('.actionList');
      actionList.forEach(function(el) {
        el.style.display = 'none';
        el.closest('tr').style.backgroundColor = 'inherit';
      });
      this.$refs[item.productCode][0].style.display = 'block';
      this.$refs[item.productCode][0].closest('tr').style.backgroundColor = '#E7E7E7';
    },
    /**
     * 詳細ページ（遷移）
     */ 
    onDetailPage(item) {
      let url = "detail";
      if(item.type == "setProduct") url = "detailSet";
      window.location.href = `/products/${ url }/${ item.productCode }`;
    },
    /**
     * コピーページ（遷移）
     */ 
    onCopyPage(item) {
      let url = "regist";
      if(item.type == "setProduct") url = "registSet";
      window.location.href = `/products/${ url }?productCode=${ item.productCode }`;
    },
    /**
     * プレビューページ（遷移）
     */ 
    onPreviewPage(item) {
      window.open(`/consumerWeb/?productCode=${ item.productCode }`, '_blank');
    },
    onFormChange(e) {
      queryParam.set(e.target.name, e.target.value);
    },
    onPage(page) {
      queryParam.set("pageNumber", page);
      this.onSerch();
    },
    /**
     * 検索処理
     */
    onSerch() {
      window.location.href = "/products?" + queryParam;
    },
  }
})
</script>
</body>
</html>